apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
<<<<<<< HEAD
<<<<<<< HEAD
  name: ts-nodepool
  namespace: karpenter
spec:
  template:
    metadata:
      labels:
        nodegroup: karpenter # 노드에 추가할 레이블
        alpha.eksctl.io/nodegroup-name: ts-karpenter-ng
=======
  name: default
=======
  name: ts-nodepool
  namespace: karpenter
>>>>>>> 33896f9 (Chore: namespace 추가)
spec:
  template:
>>>>>>> f83c4b7 (Feat: 리소스 설정 추가 및 EC2 인스턴스 관리 구성)
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-family
          operator: In
<<<<<<< HEAD
          values: ["t2"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["small", "medium"]
        - key: topology.kubernetes.io/zone
          operator: In
          values: ["ap-northeast-2a", "ap-northeast-2b"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: ts-ec2nodeclass
      expireAfter: 720h
  limits:
    cpu: 5
=======
          values: ["t2"] 
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["micro", "medium"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h
  limits:
    cpu: 500
>>>>>>> f83c4b7 (Feat: 리소스 설정 추가 및 EC2 인스턴스 관리 구성)
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m