apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: tasty-savings-backend
spec:
  replicas: 3
  revisionHistoryLimit: 7  # 최근 7개의 Revision만 유지
  selector:
    matchLabels:
      app: tasty-savings-backend  # 파드를 선택할 레이블
  template:
    metadata:
      labels:
        app: tasty-savings-backend  # 파드의 레이블 (selector와 일치)
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodegroup
                    operator: In
                    values:
                      - karpenter
      terminationGracePeriodSeconds: 30
      containers:
      - name: backend
        readinessProbe:
          httpGet:
            path: /api/healthcheck # 헬스체크 경로
            port: 8080
          initialDelaySeconds: 20 # 컨테이너 시작 후 첫 체크까지 대기 시간
          periodSeconds: 10 # 헬스 체크 간격
          timeoutSeconds: 3 # 체크 타임 아웃 설정
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "local" 
        - name: KAKAO_REDIRECT_URI
          valueFrom:
            secretKeyRef:
              name: ts-config-secrets
              key: kakao-redirect-uri
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: ts-config-secrets
              key: redis-port
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: ts-config-secrets
              key: redis-host
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: ts-config-secrets
              key: mongo-replicaset-url
        - name: AI_HOST
          valueFrom:
            secretKeyRef:
              name: ts-config-secrets
              key: ai-host
        - name: FRONT_HOST
          valueFrom:
            secretKeyRef:
              name: ts-config-secrets
              key: front-host
      - name: redis
        image: redis:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
        resources:
          limits:
            memory: "128Mi"
            cpu: "125m"
          requests:
            memory: "64Mi"
            cpu: "125m"